---

- name: Create group for service account
  become: true
  ansible.builtin.group:
    name: "{{ svc_group }}"
    gid: "{{ svc_gid }}"

- name: Manage service account
  become: true
  ansible.builtin.user:
    name: "{{ svc_user }}"
    group: "{{ svc_group }}"
    uid: "{{ svc_uid }}"
    system: true
    state: present

- name: Manage ~/.ssh/authorized_keys
  become: true
  ansible.builtin.authorized_key:
    user: "{{ svc_user }}"
    key: "{{ svc_user_public_key }}"
    exclusive: true

- name: "Get entry from passwd for {{ svc_user }}"
  ansible.builtin.getent:
    database: passwd
    key: "{{ svc_user }}"

- name: Set home_dir
  ansible.builtin.set_fact:
    home_dir: "{{ getent_passwd[svc_user][4] }}"

- name: Manage private ssh key
  become: true
  when:
    - vault_svc_user_private_key is defined
  ansible.builtin.copy:
    dest: "{{ home_dir }}/.ssh/id_rsa"
    owner: "{{ svc_user }}"
    group: "{{ svc_group }}"
    mode: 0600
    setype: ssh_home_t
    content: "{{ vault_svc_user_private_key }}"
  no_log: false  # don't log private key

- name: Allow private key type ssh-rsa
  become: true
  ansible.builtin.lineinfile:
    path: "{{ home_dir }}/.ssh/config"
    owner: "{{ svc_user }}"
    group: "{{ svc_group }}"
    mode: 0600
    setype: ssh_home_t
    create: true
    regexp: 'PubkeyAcceptedKeyTypes.*$'
    line: 'PubkeyAcceptedKeyTypes +ssh-rsa'
    state: present

- name: Create sudoers file
  become: true
  ansible.builtin.template:
    src: sudofile
    dest: "/etc/sudoers.d/{{ svc_user }}"
    owner: root
    group: root
    mode: 0440
    validate: 'bash -c "cat /etc/sudoers %s | visudo -cf-"'
